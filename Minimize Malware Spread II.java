class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        int n = graph.length,ans = initial[0],max=0;
        boolean[] infected = new boolean[n];
        for(int i : initial) infected[i] = true;
        for(int i : initial){
            boolean[] vis = new boolean[n];
            vis[i] = true;
            int count =0;
            for(int j=0;j<n;j++){
                if(!vis[j] && graph[i][j] == 1) count+= dfs(graph,j,vis,infected);
            }
            if(count > max || count == max && i < ans){
                max = count;
                ans = i;
            }
        }
        return ans;
    }
    int dfs(int graph[][],int u,boolean[] vis,boolean[] infected){
        if(infected[u]) return 0;
        vis[u] = true; 
        int count =1;
        for(int i=0;i<graph[u].length;i++){
            if(!vis[i] && graph[u][i] == 1){
                int c = dfs(graph,i,vis,infected);
                if(c == 0){
                    infected[u] = true;
                    return 0;
                }
                count += c;
            }
        }
        return count;
    }
}
